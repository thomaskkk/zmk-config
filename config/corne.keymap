/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <36 41>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
   &kp ESC           &kp Q           &kp W               &kp F         &kp P    &kp G              &kp J         &kp L                &kp U            &kp Y        &kp SEMI         &kp BSPC
 &kp LCTRL  &hm LEFT_GUI A  &hm LEFT_ALT R  &hm LEFT_CONTROL S  &hm LSHIFT T    &kp D              &kp H  &hm RSHIFT N  &hm RIGHT_CONTROL E  &hm RIGHT_ALT I  &hm LEFT_GUI O        &kp ENTER
 &kp LSHFT           &kp Z           &kp X               &kp C         &kp V    &kp B              &kp K         &kp M            &kp COMMA          &kp DOT        &kp FSLH  &kp RIGHT_SHIFT
                                                       &kp TAB         &mo 1  &kp RET          &kp SPACE         &mo 2        &kp BACKSPACE
            >;
        };

        Numpad {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans       &kp INS         &kp HOME    &kp UP    &kp END  &kp PG_UP          &kp N7  &kp N8  &kp N9  &kp MINUS      &kp PLUS  &kp BSPC
 &trans       &kp DEL         &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN          &kp N4  &kp N5  &kp N6     &kp N0  &kp ASTERISK    &trans
 &trans  &kp CAPSLOCK  &kp PRINTSCREEN    &trans     &trans     &trans          &kp N1  &kp N2  &kp N3    &kp DOT     &kp SLASH    &trans
                                          &trans     &trans     &trans          &trans  &trans  &trans
            >;
        };

        Symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT                  &kp CARET          &kp AMPS  &kp ASTERISK   &kp LPAR  &kp RPAR  &kp BSPC
 &trans    &trans  &trans    &trans  &kp UNDER   &kp PLUS          &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE     &kp TILDE  &kp GRAVE  &kp PIPE   &kp DEL
 &trans    &trans  &trans    &trans  &kp MINUS  &kp EQUAL                   &kp LBRC          &kp RBRC      &kp LBKT   &kp RBKT  &kp BSLH    &trans
                             &trans     &trans     &trans                     &trans            &trans        &trans
            >;
        };

        Function {
            bindings = <
 &trans        &kp F1        &kp F2        &kp F3  &kp F4  &kp F5                &kp F6        &kp F7      &kp F8      &kp F9   &kp F10  &kp C_MUTE
 &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans                &trans        &trans      &trans     &kp F11   &kp F12      &trans
 &trans        &trans        &trans        &trans  &trans  &trans          &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP      &trans
                                           &trans  &trans  &trans                &trans        &trans      &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
