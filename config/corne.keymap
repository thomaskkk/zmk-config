/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <80>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        game1_layer {
            bindings = <&tog 4>;
            key-positions = <1 25>;
            layers = <0 1 2 3>;
        };

        default_layer {
            bindings = <&to 0>;
            key-positions = <1 25>;
            layers = <4 5>;
        };

        caps_lock {
            bindings = <&kp CAPS>;
            key-positions = <5 6>;
        };

        alt_f4 {
            bindings = <&kp LA(F4)>;
            key-positions = <9 10 8 7>;
            layers = <0 1 2 3>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <38 39>;
        };

        backspace {
            bindings = <&kp BSPC>;
            key-positions = <4 5>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <16 17>;
        };

        enter {
            bindings = <&kp RET>;
            key-positions = <29 28>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <4 5>;
            slow-release;
        };
    };

    macros {
        spacedqt: spacedqt {
            compatible = "zmk,behavior-macro";
            label = "spacedqt";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp SPACE>;
        };

        spacesqt: spacesqt {
            compatible = "zmk,behavior-macro";
            label = "spacesqt";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SPACE>;
        };

        spacetilde: spacetilde {
            compatible = "zmk,behavior-macro";
            label = "spacetilde";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp SPACE>;
        };

        spacecaret: spacecaret {
            compatible = "zmk,behavior-macro";
            label = "spacecaret";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp SPACE>;
        };

        spacegrave: spacegrave {
            compatible = "zmk,behavior-macro";
            label = "spacegrave";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            label = "Colemak";
            bindings = <
&kp ESC   &kp Q       &kp W       &kp F          &kp P        &kp G              &kp J           &kp L        &kp U        &kp Y       &kp SEMI    &kp BSPC
&kp TAB   &hm LGUI A  &hm LALT R  &hm LCTRL S    &hm LSHFT T  &kp D              &kp H           &hm RSHFT N  &hm RCTRL E  &hm LALT I  &hm RGUI O  &kp RET
&kp LWIN  &kp Z       &kp X       &kp C          &kp V        &kp B              &kp K           &kp M        &kp COMMA    &kp DOT     &kp FSLH    &kp DEL
                                  &tm LCTRL ESC  &none        &tm LSHFT SPACE    &tm RSHFT BSPC  &none        &none
            >;
        };

        Numpad {
            label = "Numpad";
            bindings = <
&trans  &kp LC(LGUI)  &kp LC(LA(LEFT))  &kp UP         &kp LC(LA(RIGHT))  &kp PG_UP    &kp PLUS   &kp N7  &kp N8  &kp N9  &kp STAR     &trans
&trans  &kp LGUI      &kp LEFT          &kp DOWN       &kp RIGHT          &kp PG_DN    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH    &trans
&trans  &kp LS(LGUI)  &kp PSCRN         &kp C_AL_CALC  &kp HOME           &kp END      &kp F9     &kp N1  &kp N2  &kp N3  &kp PERCENT  &trans
                                        &trans         &trans             &kp SPACE    &kp BSPC   &none   &none
            >;
        };

        Symbols {
            label = "Symbols";
            bindings = <
&trans  &kp EXCL     &kp AT       &kp HASH     &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR   &trans
&trans  &spacegrave  &spacecaret  &spacetilde  &spacesqt  &spacedqt    &kp DQT    &kp SQT   &kp TILDE  &kp CARET  &kp GRAVE  &trans
&trans  &kp PIPE     &kp EQUAL    &kp PLUS     &kp MINUS  &kp UNDER    &kp LBRC   &kp RBRC  &kp LBKT   &kp RBKT   &kp BSLH   &trans
                                  &trans       &trans     &kp SPACE    &kp BSPC   &trans    &trans
            >;
        };

        Function {
            label = "Function";
            bindings = <
&trans  &kp F1        &kp F2           &kp F3        &kp F4        &kp F5          &kp F6        &kp F7           &kp F8       &kp F9      &kp F10   &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_VOL_UP  &kp LS(LA(TAB))  &kp LA(TAB)  &kp F11     &kp F12   &trans
&trans  &kp INS       &kp PAUSE_BREAK  &kp CAPS      &kp SLCK      &bt BT_CLR      &kp C_VOL_DN  &kp C_MUTE       &kp C_PREV   &kp C_NEXT  &kp C_PP  &trans
                                       &trans        &trans        &kp SPACE       &kp BSPC      &trans           &trans
            >;
        };

        Game_1 {
            label = "Game 1";
            bindings = <
&none  &kp TAB    &kp Q   &kp W      &kp E   &kp R        &kp KP_PLUS   &kp KP_N7  &kp KP_N8   &kp KP_N9  &kp KP_MULTIPLY  &none
&none  &kp LSHFT  &kp A   &kp S      &kp D   &kp F        &kp KP_MINUS  &kp KP_N4  &kp KP_N5   &kp KP_N6  &kp KP_SLASH     &none
&none  &kp N1     &kp N2  &kp N3     &kp N4  &kp N5       &kp TAB       &kp KP_N1  &kp KP_N2   &kp KP_N3  &kp KP_NUMLOCK   &none
                          &kp LCTRL  &mo 5   &kp SPACE    &kp RET       &kp KP_N0  &kp KP_DOT
            >;
        };

        Game_2 {
            label = "Game 2";
            bindings = <
&none  &kp I         &kp M     &kp UP_ARROW  &kp T      &kp Y     &trans  &trans  &trans  &trans  &trans  &none
&none  &kp LEFT_ALT  &kp LEFT  &kp DOWN      &kp RIGHT  &kp G     &trans  &trans  &trans  &trans  &trans  &none
&none  &kp Z         &kp X     &kp C         &kp V      &kp B     &trans  &trans  &trans  &trans  &trans  &none
                               &kp LEFT_ALT  &trans     &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };
